// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for WebAuthn authentication
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  credentials  Credential[]
  transactions Transaction[]
  categories   Category[]
  settings     UserSettings?

  @@map("users")
}

// WebAuthn credential storage
model Credential {
  id                String   @id @default(cuid())
  userId            String
  credentialId      Bytes    @unique
  publicKey         Bytes
  counter           BigInt
  transports        String[] // e.g., ["internal", "hybrid"]
  deviceName        String?  // e.g., "Face ID", "Touch ID"
  createdAt         DateTime @default(now())
  lastUsedAt        DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("credentials")
}

// Transaction model with multi-currency support
model Transaction {
  id          String   @id @default(cuid())
  userId      String
  
  // Original transaction details
  amount      Decimal  @db.Decimal(12, 3)  // Original amount paid (3 decimals for gold grams)
  currency    String   @db.VarChar(10)     // Currency code (EGP, USD, GOLD_G)
  
  // Exchange rate tracking (for historical accuracy)
  exchangeRate    Decimal  @db.Decimal(12, 6)  // Rate used at transaction time
  baseAmount      Decimal  @db.Decimal(12, 3)  // Converted to user's base currency (3 decimals for gold)
  baseCurrency    String   @db.VarChar(10)     // User's base currency at transaction time (EGP, GOLD_G)
  rateSource      String   @default("api")     // "api", "manual", or "market"
  
  // Transaction details
  type        String      // "income" or "expense"
  category    String      // Category name
  description String?     // Optional notes
  date        DateTime    // Transaction date
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId, date(sort: Desc)])
  @@index([userId, category])
  @@index([userId, type])
  @@map("transactions")
}

// User-defined categories
model Category {
  id          String   @id @default(cuid())
  userId      String
  name        String
  type        String   // "income" or "expense"
  color       String?  // Hex color for UI
  icon        String?  // Icon name/emoji
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, name])
  @@index([userId, type])
  @@map("categories")
}

// User settings for finance preferences
model UserSettings {
  id              String   @id @default(cuid())
  userId          String   @unique
  baseCurrency    String   @default("EGP") @db.VarChar(10)  // User's primary currency (EGP, USD, GOLD_G)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_settings")
}
