services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-166288}
      - POSTGRES_DB=${POSTGRES_DB:-youssefaltai}
    ports:
      - "5432:5432"  # Expose for local development
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session/challenge storage
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"  # Expose for local development
    networks:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Traefik reverse proxy and load balancer
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Global HTTP to HTTPS redirect
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # Uncomment for Let's Encrypt in production
      # - "--certificatesresolvers.letsencrypt.acme.email=your@email.com"
      # - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./letsencrypt:/letsencrypt  # Uncomment for SSL certificates
    networks:
      - web
    restart: unless-stopped

  # Finance App (finance.youssefaltai.com)
  finance:
    build:
      context: .
      dockerfile: apps/finance/Dockerfile
    container_name: finance-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-166288}@postgres:5432/youssefaltai?schema=public
      - REDIS_URL=redis://redis:6379
      - GOLD_API_KEY=${GOLD_API_KEY}
      - RESEND_API_KEY=${RESEND_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.finance.rule=Host(`finance.youssefaltai.com`) || Host(`finance.localhost`)"
      - "traefik.http.routers.finance.entrypoints=websecure,web"
      - "traefik.http.routers.finance.tls=true"
      # - "traefik.http.routers.finance.tls.certresolver=letsencrypt"  # Uncomment for Let's Encrypt
      - "traefik.http.services.finance.loadbalancer.server.port=3000"
    networks:
      - web
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
      - redis

  # Fitness App (fitness.youssefaltai.com)
  fitness:
    build:
      context: .
      dockerfile: apps/fitness/Dockerfile
    container_name: fitness-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-166288}@postgres:5432/youssefaltai?schema=public
      - REDIS_URL=redis://redis:6379
      - RESEND_API_KEY=${RESEND_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fitness.rule=Host(`fitness.youssefaltai.com`) || Host(`fitness.localhost`)"
      - "traefik.http.routers.fitness.entrypoints=websecure,web"
      - "traefik.http.routers.fitness.tls=true"
      # - "traefik.http.routers.fitness.tls.certresolver=letsencrypt"  # Uncomment for Let's Encrypt
      - "traefik.http.services.fitness.loadbalancer.server.port=3000"
    networks:
      - web
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
      - redis

  # Dashboard App (dashboard.youssefaltai.com)
  dashboard:
    build:
      context: .
      dockerfile: apps/dashboard/Dockerfile
    container_name: dashboard-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-166288}@postgres:5432/youssefaltai?schema=public
      - REDIS_URL=redis://redis:6379
      - RESEND_API_KEY=${RESEND_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.youssefaltai.com`) || Host(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure,web"
      - "traefik.http.routers.dashboard.tls=true"
      # - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"  # Uncomment for Let's Encrypt
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
    networks:
      - web
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
      - redis

networks:
  web:
    driver: bridge

volumes:
  postgres_data:

